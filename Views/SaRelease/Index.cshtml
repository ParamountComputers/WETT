@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "saRelease";
}

<div class="text-center">
    <h4 class="display-5">Release from Bond</h4>
</div>
<fieldset class="scheduler-border"  style="max-height: 18rem;">
<div class="container-flow">
    <div class="row">
        <div class="col-lg-2">
            <label style="font-size:8px;" for="date">Transaction Date:</label>
            <input style="font-size:10px;" type="date" id="date" name="date">
        </div>
        <div class="col-lg-2 form-group">
              <select style="font-size:10px;" class="form-control" id="locationsDropdown" name="locationsDropdown"></select> 
        </div>
        <div class="col-lg-2 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="PO:" aria-label="PO:" aria-describedby="basic-addon2" id="purchaseOrder"/>
         </div>
         <div class="col-lg-2 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="Port of Entry:" aria-label="Port of Entry:" aria-describedby="basic-addon2" id="portEntry"/>
        </div>
  
    </div>
    <div class="row">
        <div class="col-lg-4 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="Notes:" aria-label="Notes:" aria-describedby="basic-addon2" id="comments"/>
        </div>
        <div class="col-lg-2 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="Prev Trans #:" aria-label="Prev Trans #:" aria-describedby="basic-addon2" id="prevTransNo"/>
        </div>
        <div class="col-lg-2 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="Trans #:" aria-label="Trans #:" aria-describedby="basic-addon2" id="transNumber"/>
        </div>
        <div class="col-lg-1"></div>
        <div class="col-lg-2 form-group">
            <input style="font-size:10px;" type="text" class="form-control" placeholder="SA Code:" aria-label="SA Code:" aria-describedby="basic-addon2" id="saCode" readonly/>
        </div>
        <div class="col-lg-1 text-right">
            <button class="btn btn-outline-secondary" style="font-size:10px;" id="save" type="button">Save</button>  
        </div>
    </div>
</div>
</fieldset>


<table id="saRelease"></table>
<div id="jqGridPager"></div>
@section scripts {

<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
     $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var ProductNameList= [];
    var name ="";
    $(document).ready(function() {
       $("#saRelease").jqGrid({
               url: 'saRelease/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'saRelease/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'InventoryTxTypeId',name: 'inventoryTxTypeId',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Sa Code',name: 'saCode',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Date',name: 'date',fixed:true,hidden:true, edittype:"text",editoptions: { readonly: 'readonly'}},
                   { label: 'Product Name',name: 'productName',fixed:true,width:180,editable: true,editrules: { required: true,custom:true, custom_func:IsProduct },                                                             
                    editoptions: { 
                                  dataInit: function(elem) {
                    curRowId = $('#saRelease').getGridParam('selrow');    
                    $(elem).select();
                    $(elem).autocomplete({source: getProductName(),autoFocus: true,minLength: 0, select:function (event, ui) {
                   
                  $('#saRelease').jqGrid('setCell',curRowId,'supplierName', getSupplierNames(ui.item.value));
                  $('input#supplierName').val(getSupplierNames(ui.item.value));
                  $('#saRelease').jqGrid('setCell',curRowId,'productSku',getProductSku(ui.item.value));
                  $('input#productSku').val(getProductSku(ui.item.value));
                    
                } });   
            }
                   }},
                   { label: 'Supplier',name: 'supplierName',width:180,fixed:true,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                   { label: 'Product Sku',name: 'productSku',fixed:true,width:80,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                 //  { label: 'Locations',name: 'inventoryLocationId',fixed:true,width:80, editable: true, edittype:"select",formatter:'select',editrules: { required: true }, editoptions:{value:getLocation()}},
                   { label: 'Quantity',name: 'amount',fixed:true,width:95,align:"right",editable: true, edittype:"text",editrules: { required: true, number: true }},
                 //  { label: 'Reasons',name: 'inventoryTxReasonsId',fixed:true,width:110, editable: true, edittype:"select",editrules: { required: true },formatter:'select', editoptions:{value:getReasons()}},
                   { label: 'Notes',name: 'comments',fixed:true,width:500, editable: true, edittype:"text",}

                 ], 
               viewrecords: true,
               height: 500,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'saRelease/Update',              

           })
               



           $('#saRelease').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false,add:true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               {},
               {
              zIndex:99,
              afterShowForm: function () {
                  var idSelector = $.jgrid.jqID(this.p.id);
                  if(header==false) {
                      $.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
                      alert("Error: Need Header");
                  }
              },
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "saRelease/Add"
               });
               
       });

       $(document).ready(function () {  
           $('#date').val(date());
       });
       $('#saRelease').setGridWidth(parseInt($(window).width()) - 20);
       $("#comments").on('change keyup paste', function () {
           SearchByComments();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
       }); 
       $("#save").on('click', function () {
           SaveHeader();
        });
                $(document).ready(function () {  
       $.ajax({  
               type: "GET",  
               url: "SaRelease/CreateLocationList",  
               data: "{}",  
               success: function (data) {  
                   var s = '<option value="-1">Select a Location</option>';  
                   for (var i = 0; i < data.length; i++) {  
                       s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
                   }  
                   $("#locationsDropdown").html(s);  
               }  
           });  

       });

      $(document).ready(function () {  
          $.ajax({  
                type: "GET",  
                url: "SaRelease/SaCode",  
                data: "{}",  
                success: function (data) {  
                     if(data!=null)
                     {
                      header= true;
                      $("#saCode").val(data.sacode);
                      $("#date").val(data.date);
                      $("#comments").val(data.comments);
                      $("#transNumber").val(data.transNumber);
                      $("#prevTransNo").val(data.prevTransNo);
                      $("#purchaseOrder").val(data.purchaseOrder);
                      $("#portEntry").val(data.portEntry);
                      $("#probill").val(data.probill);
                      $("#locationsDropdown").val(data.locations);
                }
              }  
           });  
       });   
    function IsProduct(value,colname)
        {
            var containsProduct = false;
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateProductName', function(data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) 
                        {
                            // console.log(data[i].value);
                            if(value== data[i].value)
                                {
                                containsProduct = true;
                                }
                        }
                    }//if
        });
        if(containsProduct==true)
        {
            $.ajaxSetup( { "async": true } );
            return [true,""];
        }
        else{
        $.ajaxSetup( { "async": true } );
            
        return [false,"Please Enter Valid Product"];
        }

    }

    function date()
        {
         var date;
         var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today.toString();
         return date;
        }
    
    function SaveHeader()
        {
            var date = $("#date").val();
            var notes = $("#comments").val();
            var purchaseOrder= $("#purchaseOrder").val();
            var portEntry= $("#portEntry").val();
            var locationsDropdown= $("#locationsDropdown").val();
            var prevTransNo= $("#prevTransNo").val();
            var transNumber= $("#transNumber").val();
            if(locationsDropdown!=-1)
            {
                header = true;
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateHeader?data='+date+'/'+purchaseOrder+'/'+ portEntry+'/'+ locationsDropdown+'/'+ prevTransNo+'/'+transNumber +'/'+ notes, function(data) {
 
            $("#saCode").val(data);
                    });
            $.ajaxSetup( { "async": true } );
            }
            else
            {
                alert("Error: Enter A Location");
            }
            $('#saRelease').setGridParam({ page: 1 }).trigger("reloadGrid");
        }

    function SearchByComments()
        {
            //  Fetch the text from our <input> control
            var searchString = $("#comments").val();
        
            //  Prepare to pass a new search filter to our jqGrid
            var f = { groupOp: "AND", rules: [] };

            //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
            //  In this example, I'm searching through the UserName column.

            f.rules.push({ field: "comments", op: "cn", data: searchString });

            var grid = $('#saRelease');
            grid[0].p.search = f.rules.length > 0;
            $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
            grid.trigger("reloadGrid", [{ page: 1 }]);
        }

    function SearchByDate()
        {
            //  Fetch the text from our <input> control
            var searchString = $("#date").val();
        
            //  Prepare to pass a new search filter to our jqGrid
            var f = { groupOp: "AND", rules: [] };

            //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
            //  In this example, I'm searching through the UserName column.

            f.rules.push({ field: "date", op: "cn", data: searchString });

            var grid = $('#saRelease');
            grid[0].p.search = f.rules.length > 0;
            $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
            grid.trigger("reloadGrid", [{ page: 1 }]);
        }

    function getSupplierNames(value) 
        {
            var Supplier="";
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdj/CreateList', function(data) {
            if (data != null) {
           
                for (var i = 0; i < data.length; i++) {
                    if(value === data[i].value)
                    {

                 Supplier= data[i].text;
                    }
                    } 
                }//if

                });
                $.ajaxSetup( { "async": true } );
               return Supplier; 
        }

    function getProductSku(value) 
        {
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateProductSkuList', function(data) {
            if (data != null) {
                for (var i = 0; i < data.length; i++) {
                    if(data[i].value== value)
                    {

                 ProductSku=data[i].text;
                    } 
                  }
                }//if

                });
                $.ajaxSetup( { "async": true } );
               return ProductSku.toString(); 
        }

    function getProductName() 
        {
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateProductName', function(data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) 
                    {
                        ProductNameList[i]=data[i].value;
                    }
                 }//if

                }
             );
                $.ajaxSetup( { "async": true } );
  
               return ProductNameList; 
        }

    function getLocation() 
        {
            var LocationList= {};
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateLocationList', function(data) {
            if (data != null) {
                for (var i = 0; i < data.length; i++) {
                 LocationList[data[i].value]=data[i].text;
                  }
             }//if
             });
             $.ajaxSetup( { "async": true } );
             
             return LocationList; 
        }

    function getReasons() 
        {
            var ReasonsList= {};
            $.ajaxSetup( { "async": false } );
            $.getJSON('saRelease/CreateReasonsList', function(data) {
            if (data != null) {
                for (var i = 0; i < data.length; i++) {
                 ReasonsList[data[i].value]=data[i].text;
                 }
             }//if
             });
            $.ajaxSetup( { "async": true } );
             
            return ReasonsList; 
        }

</script>
}