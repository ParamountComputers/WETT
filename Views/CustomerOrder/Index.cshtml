@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "CustomerOrder";
}

<div class="text-center">
    <h2 class="display-4">Customer Order</h2>
</div>
<fieldset class="scheduler-border">
  <div class="container-flow">

     <div class="row p-1">

             <div class="col-lg-3">
               <label for="dateOrdered"  style="font-size:8px;">Date Ordered:</label>
               <input type="date" value="" style="font-size:10px;" id='dateOrdered' name="dateOrdered" />
             </div>

             <div class="col-lg-3 form-group">
                <select style="font-size:10px;" class="form-control" id="customer" name="customer"></select>
             </div>
            
             <div class="col-lg-3">
                <input type="text"  style="font-size:10px;" class="form-control" placeholder="Order Number:" id="orderNumber" name="orderNmber"/>
             </div>

     </div>

     <div class="row p-1">

            <div class="col-lg-3">
               <label for="deliveryReqDate"  style="font-size:8px;">Delivery Req Date:</label>
               <input type="date" value=""  style="font-size:10px;" id='deliveryReqDate' name="deliveryReqDate" />
            </div>
            
            <div class="col-lg-3 form-group">
               <select style="font-size:10px;" class="form-control" id="carrier" name="carrier"></select>
            </div>

             <div class="col-lg-3">
                <input type="text"  style="font-size:10px;" class="form-control" placeholder="Special Instructions:" id="specialInstructions" name="specialInstructions"/>
             </div>
     </div>
          <div class="row p-1">

              <div class="col-lg-3 form-group">  
                 <select style="font-size:10px;" class="form-control" id="customerOrderStatus" name="customerOrderStatus"></select>
             </div>

             <div class="col-lg-3">
                <input type="text"  style="font-size:10px;" class="form-control" placeholder="Driver:" id="driver" name="driver"/>
             </div>
            
             <div class="col-lg-3">
                <input type="text"  style="font-size:10px;" class="form-control" placeholder="Ds Slip Number:" id="dsSlipNumber" name="dsSlipNumber"/>
             </div>

             <div class="col-lg-2"></div>

             <div class="col-lg-1 text-right">
                <button class="btn btn-outline-secondary" style="font-size:10px;" id="save" type="button">Save</button>  
             </div>   

     </div>
</div>
</fieldset>

<table id="customerOrder" style="align: center"></table>
<div id="jqGridPager"></div>
@section scripts {

<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
     $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    $(document).ready(function() {
       $("#customerOrder").jqGrid({
               url: 'CustomerOrder/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'CustomerOrder/Delete' }
                        }
                    },
                   { label: 'Customer Order Detail Id',name: 'customerOrderDetailID', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'Customer Order Id',name: 'customerOrderID', hidden:true,editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Product Desc',name: 'productDesc',fixed:true,width:150,editable: true,editrules: { required: true,custom:true, custom_func:IsProduct },                                                             
                    editoptions: { 
                                  dataInit: function(elem) {
                                                curRowId = $('#customerOrder').getGridParam('selrow');   
                                                $(elem).select();
                                                $(elem).autocomplete({source: getProductName(),autoFocus: true,minLength: 0, select:function (event, ui) {
                                              $('#customerOrder').jqGrid('setCell',curRowId,'productSku',getProductSku(ui.item.value));
                                              $('input#productSku').val(getProductSku(ui.item.value));   
                                            } });   
                                     }
                   }},
                   { label: 'Product ID(Sku)',name: 'productSku',fixed:true,width:120,edittype:'text', editoptions: {readonly: 'readonly'}},
                   { label: 'Stoc Qty',name: 'stockQty',fixed:true,width:100, editable: true,edittype:'text',editrules: {number:true}},
                   { label: 'Qty Ordered',name: 'qtyOrdered',fixed:true,width:100, editable: true,edittype:'text',editrules: {number:true}},
                   { label: 'Qty Fulfilled',name: 'qtyFulfilled',fixed:true,width:100, editable: true,edittype:'text',editrules: {number:true}},
                   { label: 'Notes',name: 'notes', editable: true,fixed:true,width:450,edittype:'text'}

                 ], 
               viewrecords: true,
               height: 500,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'CustomerOrder/Update',              

           })
               



           $('#customerOrder').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false,add:true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
              
               {
                  
               },
               {
              zIndex:99,
              afterShowForm: function () {
              var idSelector = $.jgrid.jqID(this.p.id);
              console.log(header);
              if(header==false) {
              $.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              alert("Error: Need Header");
              }
              },
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "CustomerOrder/Add"
               });
               
       });
       $(document).ready(function () {  
           $('#dateOrdered').val(date());
            $('#deliveryReqDate').val(date());
       });
      
       $('#customerOrder').setGridWidth(parseInt($(window).width()) - 20);
       $("#date").on('change keyup paste', function () {
           SearchByDate();
           
       }); 
       $("#save").on('click', function () {
           SaveHeader();
        });
        $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "CustomerOrder/CreateCustomerList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Select a Customer</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#customer").html(s);    
           }  
       });  
   });
           $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "CustomerOrder/CreateCarrierList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Select a Carrier</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#carrier").html(s);    
           }  
       });  
   });
           $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "CustomerOrder/CreatetCustomerOrderStatusList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Select a Order Status</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#customerOrderStatus").html(s);    
           }  
       });  
   });
        function date()
        {
         var date;
         var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today.toString();
         return date;
        }
                      function IsProduct(value,colname)
       {
           var containsProduct = false;
                   $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreateProductName', function(data) {
        if (data != null) {


            for (var i = 0; i < data.length; i++) 
            {
         if(value== data[i].value)
         {
             
           containsProduct = true;
               
         }
            }
                         }//if

            });
            if(containsProduct==true)
            {
              $.ajaxSetup( { "async": true } );
              return [true,""];
            }
            else{
            $.ajaxSetup( { "async": true } );
            return [false,"Please Enter Valid Product"];
            }

      }
    
            function SaveHeader()
    {
         header = true;
         var CustomerId =$("#customer").val();
         var OrderNumber=$('#orderNumber').val();
         var DateOrdered=$('#dateOrdered').val();
         var CustomerOrderStatusId=$('#customerOrderStatus').val();
         var CarrierId=$('#carrier').val();
         var Driver=$('#driver').val();
         var DsSlipNumber=$('#dsSlipNumber').val();
         var DeliveryReqDate=$('#deliveryReqDate').val();
         var SpecialInstructions=$('#specialInstructions').val();

         if(CustomerId !=-1 && CustomerOrderStatusId !=-1 && CarrierId != -1)
            {
         $.ajaxSetup( { "async": false } );
                 $.getJSON('CustomerOrder/CreateHeader?data='+CustomerId+'/'+OrderNumber+'/'+DateOrdered+'/'+CustomerOrderStatusId+'/'+CarrierId+'/'+Driver+'/'+DsSlipNumber+'/'+DeliveryReqDate+'/'+SpecialInstructions, function(data) {});
         $.ajaxSetup( { "async": true } );
             }
            else if(CustomerId==-1 && CustomerOrderStatusId==-1 && CarrierId==-1)
            {
                alert("Error: Enter A Customer, Order Status And A Carrier");
            }
            else if(CustomerId==-1 && CustomerOrderStatusId==-1)
            {
                alert("Error: Enter A Customer And A Order Status");
            }
            else if(CustomerId==-1 && CarrierId==-1)
            {
                alert("Error: Enter A Customer And A Carrier");
            }
            else if(CarrierId==-1 && CustomerOrderStatusId==-1)
            {
                alert("Error: Enter A Carrier And A Order Status");
            }
            else if(CustomerOrderStatusId==-1)
            {
                alert("Error: Enter A Order Status");
            }
            else if(CarrierId==-1)
            {
                 alert("Error: Enter A Carrier");
            }
            else if(CustomerId==-1)
            {
                 alert("Error: Enter A Customer");
            }

            $('#customerOrder').setGridParam({ page: 1 }).trigger("reloadGrid");

    }


         function getCarrier() {
        var CarrierList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreateCarrierList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             CarrierList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );

           return CarrierList; 

        }
                 function getCustomer() {
        var CustomerList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreatetCustomerList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             CustomerList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(CustomerList);
           return CustomerList; 

        }
                 function getCustomerOrderStatus() {
        var CustomerOrderStatusList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreatetCustomerOrderStatusList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             CustomerOrderStatusList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );

           return CustomerOrderStatusList; 

        }
                      function getProductSku(value) {
        var ProductSku ="";
        $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreateProductSkuList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
                if(data[i].value== value)
                {

             ProductSku=data[i].text;
                } 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
           return ProductSku.toString(); 

        }
                function getProductName() {
         var ProductNameList= [];
        $.ajaxSetup( { "async": false } );
        $.getJSON('CustomerOrder/CreateProductName', function(data) {
        if (data != null) {


            for (var i = 0; i < data.length; i++) 
            {
                ProductNameList[i]=data[i].value;
            }
         }//if

            });
            $.ajaxSetup( { "async": true } );
            

           return ProductNameList; 

        }

</script>
}
