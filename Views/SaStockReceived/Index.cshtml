
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "saStockReceived";
}
 <div class="text-center">
    <h4 class="display-5">Stock Received</h4>
 </div>
<fieldset class="scheduler-border"  style="max-height: 18rem;">
    <div class="container-flow">
        <div class="mb-3 row">
          <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label" for="date">Transaction Date:</label>
          </div>
            <div class="col-lg-1 p-0">
                <input style="font-size:8px;" class="form-control" type="date" id="date" name="date">
          </div>          
        </div>
        <div class="mb-3 row">
            <div class="col-lg-1 text-right">
                <label style="font-size:7px;" class="col-form-label"  for="truckingCompanyDropdown">Trucking Company:</label>
          </div>
          <div class="col-lg-1 p-0">
               <select style="font-size:8px;" class="form-control" id="truckingCompanyDropdown" name="truckingCompanyDropdown"></select>
          </div>
          <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="locationsDropdown">To Location:</label>
          </div>
          <div class="col-lg-1 p-0">
                <select style="font-size:8px;" class="form-control" id="locationsDropdown" name="locationsDropdown"></select> 
          </div>
         <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="supplierDropdown">Supplier:</label>
          </div>
        <div class="col-lg-1 p-0">
                <select style="font-size:8px;" class="form-control" id="supplierDropdown" name="supplierDropdown"></select> 
         </div> 
          <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="truckerProbillNumber">Probill #:</label>
          </div>
         <div class="col-lg-1 p-0">
                   <input style="font-size:8px;" type="text" class="form-control"  aria-describedby="basic-addon2" id="truckerProbillNumber"/>
            </div>
        </div>
        <div class="mb-3 row">
            <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="purchaseOrder">PO:</label>
            </div>
             <div class="col-lg-1 p-0">
                <input style="font-size:8px;" type="text" class="form-control"  aria-describedby="basic-addon2" id="purchaseOrder"/>
             </div>
             <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="sealNo">Seal #:</label>
             </div>
              <div class="col-lg-1 p-0">
              <input style="font-size:8px;" type="text" class="form-control"  aria-describedby="basic-addon2" id="sealNo"/>
             </div>
             <div class="col-lg-1 text-right">
                <label style="font-size:8px;" class="col-form-label"  for="comments">Notes:</label>
             </div>
             <div class="col-lg-3 p-0">
                 <input style="font-size:8px;" type="text" class="form-control"  aria-describedby="basic-addon2" id="comments"/>
             </div>
             <div class="col-lg-1"></div>
             <div class="col-lg-1 text-right"> 
                 <label for="saCode"  class="col-form-label" style="font-size:8px;">SA Code:</label>
             </div>
             <div class="col-lg-1 p-0">
                   <input type="text" style="font-size:8px; border-radius: 0 !important" class="form-control" id="saCode" readonly/>
             </div>
             <div class="col-lg-1 text-right">
                  <button class="btn btn-outline-secondary" style="font-size:8px;" id="save" type="button">Save</button>  
             </div> 
            </div>
    </div>
</fieldset>

<table id="saStockReceived"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var name;
    $(document).ready(function() {
       $("#saStockReceived").jqGrid({
               url: 'SaStockReceived/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        fixed: true,
                        formatter: "actions",
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'SaStockReceived/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'Date',name: 'date', editable: true, edittype:"text", hidden:true,editoptions: { readonly: 'readonly'}},
                   { label: 'Product Name',name: 'productName',fixed:true,width:170,editable: true,editrules: { required: true,custom:true, custom_func:IsProduct },                                                             
                    editoptions: { 
                                  dataInit: function(elem) {

                    curRowId = $('#saStockReceived').getGridParam('selrow');   
                   
                    //$(elem).val();
                  // $('#invAdj').jqGrid('setSelection', 'productName');
                  $(elem).select();
                  name=$("#supplierDropdown").val();
                  console.log(name);
                    $(elem).autocomplete({source: getProductName(name),autoFocus: true,minLength: 0, select:function (event, ui) {
                 // $('#saStockReceived').jqGrid('setCell',curRowId,'supplierName', getSupplierNames(ui.item.value));
                  //$('input#supplierName').val(getSupplierNames(ui.item.value));
                  $('#saStockReceived').jqGrid('setCell',curRowId,'productSku',getProductSku(ui.item.value));
                  $('input#productSku').val(getProductSku(ui.item.value));   
                  console.log(getProductSku(ui.item.value));
                  console.log(ui.item.value);
                } });   
                                  }
                   }},
                   //{ label: 'Supplier',name: 'supplierName',width:170,fixed:true,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                   { label: 'Product Sku',name: 'productSku',fixed:true,width:100,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                   { label: 'Adj Amount (+/-)',name: 'amount',fixed:true, width:80,editable: true, edittype:"text"},
                   { label: 'Notes',name: 'comments',fixed:true,width:650, editable: true, edittype:"text"}

                 ], 
               viewrecords: true,
               height: 500,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'SaStockReceived/Update',
               onSelectRow: function(rowid) {
                curRowId=rowid;


               }

           })
               



           $('#saStockReceived').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {
                  
               },
              {
              zIndex:99,
              afterShowForm: function () {
              var idSelector = $.jgrid.jqID(this.p.id);
              if(header==false) {
              $.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              alert("Error: Need Header");
              }
              },
              closeAfterAdd: true,
              recreateForm: true,
              errorTextFormat: function (data) {
              return 'Error: ' + data.responseText
              },
              url: "SaStockReceived/Add"
               });

       });
$(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateLocationsList",  
           data: "{}",  
           success: function (data) {  
               var s = '';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#locationsDropdown").html(s);  
           }  
       });  
   });
   $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateTruckingList",  
           data: "{}",  
           success: function (data) {  
               var s = '';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#truckingCompanyDropdown").html(s);
               
           }  
       });  
   });
                 $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateList",  
           data: "{}",  
           success: function (data) {  
               var s = '';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#supplierDropdown").html(s);    
           }  
       });  
   });
          $(document).ready(function () {  
           $('#date').val(date());
       });
       $('#saStockReceived').setGridWidth(parseInt($(window).width()) - 20);
       $("#productName").on('change keyup paste', function () {
           SearchByProductName();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
           
       }); 
              $("#comments").on('change keyup paste', function () {
           SearchByComments();
           
       }); 
            $("#saCode").on('change keyup paste', function () {
           SearchBySaCode();
        });
               $("#locationsDropdown").on('change keyup paste', function () {
           SearchByLocations();
           
       }); 

                   $("#purchaseOrder").on('change keyup paste', function () {
           SearchByPurchaseOrder()
        });
               $("#save").on('click', function () {
           SaveHeader();
        });
        function date()
        {
         var date;
         var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today.toString();
         return date;
        }

        $(document).ready(function () {  
          $.ajax({  
                type: "GET",  
                url: "SaStockReceived/SaCode",  
                data: "{}",  
                success: function (data) {  
                     if(data!=null)
                     {
                      header= true;
                      $("#saCode").val(data.sacode);
                      $("#date").val(data.date);
                      $("#comments").val(data.comments);
                      $("#truckingCompanyDropdown").val(data.truckingCompanyDropdown);
                      $("#sealNo").val(data.sealNo);
                      $("#purchaseOrder").val(data.purchaseOrder);
                      $("#truckerProbillNumber").val(data.truckerProbillNumber);
                      $("#locationsDropdown").val(data.locations);
                      $("#supplierDropdown").val(data.supplier);
                }
              }  
           });  
       }); 
    
            function SaveHeader()
    {

        var date = $("#date").val();
        var notes = $("#comments").val();
        var truckingCompany= $("#truckingCompanyDropdown").val();
        var Po = $("#purchaseOrder").val();
        var sealNumber = $("#sealNo").val();
        var truckingNumber = $("#truckerProbillNumber").val();
        var locations = $("#locationsDropdown").val();
        var supplier = $("#supplierDropdown").val();
              if(locations!=-1 && truckingCompany!=-1 && supplier !=-1)
            {
                header = true;
                $.ajaxSetup( { "async": false } );
                $.getJSON('SaStockReceived/CreateHeader?data='+date+'/'+notes+'/'+truckingCompany+'/'+Po+'/'+sealNumber+'/'+truckingNumber+'/'+locations+'/'+supplier, function(data) {
                $("#saCode").val(data);
                });
                $.ajaxSetup( { "async": true } );
            }
             else if(truckingCompany==-1 && locations==-1 && supplier ==-1)
            {
                alert("Error: Enter A trucking Company, Supplier and Location");
            }
             else if(truckingCompany==-1 && supplier==-1)
            {
                alert("Error: Enter A trucking Company and A Supplier");
            }
             else if(supplier==-1 && locations==-1)
            {
                alert("Error: Enter A Supplier and Location");
            }
            else if(truckingCompany==-1 && locations==-1)
            {
                alert("Error: Enter A trucking Company and Location");
            }
            else if(truckingCompany==-1)
            {
                alert("Error: Enter A Trucking Company");
            }
            else if(locations==-1)
            {
                 alert("Error: Enter A Location");
            }
            else if(supplier==-1)
            {
                 alert("Error: Enter A Supplier");
            }
            $('#saStockReceived').setGridParam({ page: 1 }).trigger("reloadGrid");
      }

       function IsProduct(value,colname)
       {
            var containsProduct = false;
            $.ajaxSetup( { "async": false } );
            $.getJSON('SaStockReceived/CreateProductName', function(data) {
            if (data != null) {


                for (var i = 0; i < data.length; i++) 
                {
                 if(value== data[i].text && name == data[i].value)
                 {
                    containsProduct = true;
                 }
                }
             }//if

                });
                if(containsProduct==true)
                {
                  $.ajaxSetup( { "async": true } );
                  return [true,""];
                }
                else{
                $.ajaxSetup( { "async": true } );
                return [false,"Please Enter Valid Product"];
                }

      }
    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#productName").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "productName", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchBySaCode()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#saCode").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "saCode", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchByDate()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#date").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "date", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
            function SearchByComments()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#comments").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "comments", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }

        function SearchByLocations()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#locationsDropdown").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "locationsDropdown", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
    
     function SearchByPurchaseOrder()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#purchaseOrder").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "purchaseOrder", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
    //
    //End of search functions
    //

            function getSupplierNames(value) {
        var Supplier="";
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateList', function(data) {
        if (data != null) {
            
            for (var i = 0; i < data.length; i++) {
              if(data[i].value == value )
                {
                 Supplier=data[i].text;
                }
            } 
        }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(Supplier);
           return Supplier; 

        }

              function getProductSku(value) {
        var ProductSku= "";
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductSkuList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++)
            {
                if(data[i].value == value)
                {
                   ProductSku=data[i].text;
                } 
             }
        }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(ProductSku);
           return ProductSku; 

        }
               function getProductName(value) {
         var ProductNameList= [];
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductName', function(data) {
          if (data != null) {
              var count=0;
                for (var i = 0; i < data.length; i++) 
                {
                    if(value == data[i].value)
                    {
                    ProductNameList[count]=data[i].text;
                    count+=1;
                    }
                }
          }//if

         });
         $.ajaxSetup( { "async": true } );
         return ProductNameList; 

        }      
 </script>
}
