@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "invAdj";
}

<div class="text-center">
    <h1 class="display-4">Inventory Adjustment</h1>
</div>
<fieldset class="scheduler-border">
  <legend class="scheduler-border">Search</legend>
<div class="container-flow">
  <div class="row">
           <div class="col-3 text-left">
         <label for="date" style="font-size:14px;">Transaction Date:</label>
         <input type="date" style="font-size:14px;" id="date" name="date">
           </div>
           
           <div class="col-4">
         <input type="text"  style="font-size:14px;" class="form-control" placeholder="Notes" aria-label="Notes" aria-describedby="basic-addon2" id="comments">
           </div>
           
           <div class="col-3">
          <input type="text" name="input" id="saCode" value="SA Code" readonly>
            </div>

            <div class="col-2 text-right">
          <button class="btn btn-outline-secondary" id="save" type="button">Save</button>  
            </div>        

  </div>
</div>

</fieldset>

<table id="invAdj" style="align: center"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var name="";
    $(document).ready(function() {
       $("#invAdj").jqGrid({
               url: 'InvAdj/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'InvAdj/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'Sa Code',name: 'saCode',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Date',name: 'date',fixed:true,hidden:true, edittype:"text",editoptions: { readonly: 'readonly'}},
                   { label: 'Supplier',name: 'supplierName',fixed:true, editable: true, edittype:"select",formatter:'select', editoptions: {value:getSupplierNames(),                
                   dataInit: function (elem) {
                    name = $(elem).val();
                   
                    $('#invAdj').setColProp('productId', { editoptions: { value:getProductName()} });
                    $('#invAdj').setColProp('productSku', { editoptions: { value:getProductSku()} });
                    console.log(name);
                    },
                       dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                       name =$('#invAdj').jqGrid ('getCell', curRowId, 'supplierName');
                      $('#invAdj').setColProp('productId', { editoptions: { value:getProductName()} });
                      $('#invAdj').setColProp('productSku', { editoptions: { value:getProductSku()} });
                       $("invAdj").trigger('reloadGrid');
                       console.log(name);
                       
                        }
                    }
                       ]
                    }},
                   { label: 'Product Sku',name: 'productSku',fixed:true,width:80, editable: true,edittype:"select",formatter:'select',},
                   { label: 'Product Name',name: 'productId',fixed:true, editable: true, edittype:"select",formatter:'select', editoptions: { dataUrl:'InvAdj/CreateProductName',
                 buildSelect: function(data) {
                     var s = '<select>';
                          for (var i = 0; i <data.length; i++) { 
                             if(data[i].value == name)
                             {
                             s += '<option value="'+data[i].id+'">'+data[i].text+'</option>';
                             
                             }
                             
                     }                
                     return  s += "</select>";
                 },value:getProductName()} },
                   { label: 'Locations',name: 'inventoryLocationId',fixed:true,width:80, editable: true, edittype:"select",formatter:'select', editoptions:{value:getLocation()}},
                   { label: 'Updated Stock',name: 'amount',fixed:true,width:95,align:"right",editable: true, edittype:"text"},
                   { label: 'Reasons',name: 'inventoryTxReasonId',fixed:true,width:100, editable: true, edittype:"select",formatter:'select', editoptions:{value:getReasons()}},
                   { label: 'Notes',name: 'comments',fixed:true,width:450, editable: true, edittype:"text",}

                 ], 
               viewrecords: true,
               height: 250,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'InvAdj/Update',
               onSelectRow: function(rowid) {
                curRowId=rowid;


               }

           })
               



           $('#invAdj').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false,add:true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {
               },
               {
              afterShowForm: function () {
              var idSelector = $.jgrid.jqID(this.p.id);
              if(header==false) {
              $.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              alert("Error: Need Header");
              }
              },
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "InvAdj/Add"
               });

       });
       $('#invAdj').setGridWidth(parseInt($(window).width()) - 20);
       $("#comments").on('change keyup paste', function () {
           SearchByComments();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
           
       }); 
       $("#save").on('click', function () {
           SaveHeader();
        });
            function SaveHeader()
    {
         header = true;
        var date = $("#date").val();
        var notes = $("#comments").val();
        if(date=="")
        {
            var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today;
        }
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateHeader?data='+date+'/'+notes, function(data) {
 
        $("#saCode").val(data);
                    });
            $.ajaxSetup( { "async": true } );

    }
    function SearchByComments()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#comments").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "comments", op: "cn", data: searchString });

        var grid = $('#invAdj');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchByDate()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#date").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "date", op: "cn", data: searchString });

        var grid = $('#invAdj');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }

            function getSupplierNames() {
        var SupplierList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateList', function(data) {
        if (data != null) {
            
            for (var i = 0; i < data.length; i++) {
             SupplierList[data[i].text]=data[i].text;
              } 
            }//if

            });
            $.ajaxSetup( { "async": true } );
           return SupplierList; 

        }

              function getProductSku() {
        var ProductSkuList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateProductSkuList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
                if(data[i].value == name)
                {
             ProductSkuList[data[i].text]=data[i].text;
                } 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
           return ProductSkuList; 

        }
                function getProductName() {
        var ProductNameList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateProductName', function(data) {
        if (data != null && name =="") {
            for (var i = 0; i < data.length; i++) {
                 ProductNameList[data[i].id]=data[i].text;
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
           // console.log(ProductNameList);
           return ProductNameList; 

        }
         function getLocation() {
        var LocationList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateLocationList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             LocationList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );

           return LocationList; 

        }
                 function getReasons() {
        var ReasonsList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateReasonsList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             ReasonsList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );

           return ReasonsList; 

        }

</script>
}
