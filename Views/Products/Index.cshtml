@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Product";
}

<div class="text-center">
    <h1 class="display-4">Product</h1>
</div>
<fieldset class="scheduler-border">
    <legend class="scheduler-border">Search</legend>
    <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="Description" aria-label="Description" aria-describedby="basic-addon2" id="description">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button">Search</button>
        </div>
    </div>
</fieldset>

<table id="product" style="align: center"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;

    $(document).ready(function() {
       $("#product").jqGrid({
               url: 'Products/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 150,
                        formatter: "actions",
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'Products/Delete' }
                        }
                    },

 			       { label: 'Product Id',name: 'productId', editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},

                   { label: 'Supplier Id',name: 'supplierId', editable: true, edittype:"select",formatter: 'select', editoptions: { value: getAllSelectOptions()}},

			       { label: 'Sku',name: 'sku', editable: true, edittype:"text", editoptions: { maxlength: 50}, editrules: { required: true }},

			       { label: 'Description',name: 'description', editable: true, edittype:"text", editoptions: { maxlength: 100}, editrules: { required: true }},

                   { label: 'SingleWeight',name: 'singleWeight', editable: true, edittype:"text", editoptions: { maxlength:15},editrules: { required: true }},

                   { label: 'ContainerWeight', name: 'containerWeight', editable: true, edittype:"text",editoptions: {maxlength: 15}, editrules: { required: true } },

                   { label: 'CaseWeight', name: 'caseWeight', editable: true, edittype:"text",editoptions: {maxlength: 100},editrules: { required: true } },

                   { label: 'PackSize', name: 'packSize', editable: true, edittype:"text",editoptions: {maxlength: 100},editrules: { required: true }},

                   { label: 'HlSingle', name: 'hlSingle',editable: true, edittype:"text", editoptions: {maxlength: 100}},

                   { label: 'HlContainer', name: 'hlContainer',editable: true, edittype:"text", editoptions: {maxlength: 100}},

                   { label: 'HlCase', name: 'hlCase',editable: true, edittype:"text", editoptions: {maxlength: 100}}
                 ], 
               viewrecords: true,
               height: 250,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'Products/Update'
               //onSelectRow: editRow, // the javascript function to call on row click. will use to put the row in edit mode

           }).hideCol("productId");
               



           $('#product').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {},
               {
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "Products/Add"
               });

       });

       $('#product').setGridWidth(parseInt($(window).width()) - 20);

       $("#description").on('change keyup paste', function () {
           SearchByProductName();
       });
        function getAllSelectOptions()
        {
        var states = { '2': 'Carlsberg', '3': 'Moosehead Brewery', '15': 'Kokanee', 
               '16': 'mil' };

        return states;

        }
    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#description").val();

        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "name", op: "cn", data: searchString });

        var grid = $('#product');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }



</script>
}