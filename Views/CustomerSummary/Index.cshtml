@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "CustomerSummary";
}

<div class="text-center">
    <h4 class="display-5">Customer Summary</h4>
</div>
<body>
  <div class="searchDate">
      <label for="startDate" class="Label" >Start Order Date:</label>
      <input type="date"id='startDate' class="Date" name="startDate" />
  </div>
  <div class="Gap2"></div>
  <div class="searchDate">
      <label for="endDate" class="Label" >End Order Date:</label>
      <input type="date"id='endDate' class="Date" name="endDate" />
  </div>
  <div class="Gap2"></div>
  <div class="searchDropdown2"> 
      <label for="StatusDropdown"  class="Label">Status:</label>
      <select class="form-control dropDownInput2" id="StatusDropdown" name="StatusDropdown"></select> 
  </div>
</body>

<table id="customerSummary"></table>
<div id="jqGridPager"></div>
<fieldset class="scheduler-border">
 <div class="mb-3 row">
    <div class="col-lg-12">
          <button class="btn btn-secondary btn-lg btn-block" style="font-size:12px;" id="search" type="button"> Search </button>  
    </div>
 </div>
</fieldset>
@section scripts {

<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
     $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var name ="";
    $(document).ready(function() {
       $("#customerSummary").jqGrid({
               url: 'CustomerSummary/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit",
                        name: "actions",
                        width: 50,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            //addOptions: { },
                            delbutton: false
                            //delOptions: { url: 'CustomerSummary/Delete' }
                        }
                    },
                   { label: 'Customer Order Id',name: 'customerOrderID',hidden:true, editable: true,key: true},
                   { label: 'Order Date',name: 'orderDate',fixed:true,width:120,editoptions: { readonly: 'readonly'}},
                   { label: 'Delivery Date',name: 'delveryDate',fixed:true,width:120,editoptions: { readonly: 'readonly'}},
                   { label: 'Order Number',name: 'orderNumber',fixed:true,width:100,editoptions: { readonly: 'readonly'}},
                   { label: 'Customer',name: 'customer',fixed:true,width:150,editoptions: { readonly: 'readonly'}},
                   { label: 'City',name: 'city',fixed:true,width:100,editoptions: { readonly: 'readonly'}},
                   { label: 'Carrier',name: 'carrier',fixed:true,width:100,editoptions: { readonly: 'readonly'}},
                   { label: 'Instructions',name: 'instructions',fixed:true,width:280,edittype:'text', editable: true},
                   { label: 'Status',name: 'status',fixed:true,width:100,editoptions: { readonly: 'readonly'}}


                 ],  
               viewrecords: true,
               height: 388.5,
               rowHeight: 20,
               rowNum: 15,
               pager: "#jqGridPager",
               editurl: 'CustomerSummary/Update', 
               ondblClickRow: function(rowid) {
                var cellVal = $('#customerSummary').jqGrid ('getCell', rowid, 'customerOrderID');
                //var invTxType = $("#InvTxSummaryDropdown").val();
                window.open("CustomerOrder?CustomerOrderID="+cellVal);
                console.log(cellVal);
                //if(invTxType==1)
                //{
                //    window.open("CustomerOrder?CustomerOrderID="+cellVal);
                //}
                //else if(invTxType==2)
                //{
                //    window.open("SaDamageRecoup?SaCode="+cellVal);
                //}
                //else if(invTxType==3)
                //{
                //    window.open("saOutbound?SaCode="+cellVal);
                //}
                //else if(invTxType==4)
                //{
                //    window.open("SaRelease?SaCode="+cellVal);
                //}
                //else if(invTxType==5)
                //{
                //    window.open("SaExciseDuty?SaCode="+cellVal);
                //}
                //else if(invTxType==6)
                //{
                //    window.open("saInternalTransfer?SaCode="+cellVal);
                //}
                //else if(invTxType==7)
                //{
                //    window.open("SaStockReceived?SaCode="+cellVal);
                //}
                

               }

           })
               



           $('#customerSummary').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false,add:false, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
              
              {
                  
              },
              // {
              //zIndex:99,
              //afterShowForm: function () {
              //var idSelector = $.jgrid.jqID(this.p.id);
              //if(header==false) {
              //$.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              //alert("Error: Need Header");
              //}
              //},
              //     closeAfterAdd: true,
              //     recreateForm: true,
              //     errorTextFormat: function (data) {
              //         return 'Error: ' + data.responseText
              //     },
              //     url: "InvTxSummary/Add"
              // }
              );
               
       });
       $(document).ready(function () {  
           $('#startDate').val(date());
            $('#endDate').val(date());
       });
      $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "CustomerSummary/CreateStatusList",  
           data: "{}",  
           success: function (data) {  
               var s = '';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#StatusDropdown").html(s);  
           }  
       });  
   });
       $('#customerSummary').setGridWidth(parseInt($(window).width()) - 20);
       
       $("#search").on('click', function () {
           SaveHeader();
        });
        function date()
        {
         var date;
         var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today.toString();
         return date;
        }
    
            function SaveHeader()
    {
        var endDate = $("#endDate").val();
        var startDate = $("#startDate").val();
        var Status = $("#StatusDropdown").val();
        if(startDate != "" && endDate !="" && Status != -1)
            {
                    header = true;
                    $.ajaxSetup( { "async": false } );
                    $.getJSON('CustomerSummary/CreateSearch?data='+startDate+'/'+endDate+'/'+Status, function(data) {});
                    $.ajaxSetup( { "async": true } );
            }
        else if(Status==-1 && startDate== "" && endDate =="")
            {
                alert("Error: Enter A Start Date, End Date And Type");
            }
        else if(Status==-1 && startDate== "")
            {
                alert("Error: Enter A Start Date And Type");
            }
        else if(Status==-1 && endDate== "")
            {
                alert("Error: Enter A End Date And Type");
            }
        else if(startDate=="" && endDate== "")
            {
                alert("Error: Enter A Start Date And End Date");
            }
        else if(Status==-1)
            {
                alert("Error: Enter A Type");
            }
        else if(startDate=="")
            {
                alert("Error: Enter A Start Date");
            }
        else if(endDate=="")
            {
                alert("Error: Enter A End Date");
            }
    $('#customerSummary').setGridParam({ page: 1 }).trigger("reloadGrid");

    }

    //function SearchByComments()
    //{
    //    //  Fetch the text from our <input> control
    //    var searchString = $("#comments").val();
        
    //    //  Prepare to pass a new search filter to our jqGrid
    //    var f = { groupOp: "AND", rules: [] };

    //    //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
    //    //  In this example, I'm searching through the UserName column.

    //    f.rules.push({ field: "comments", op: "cn", data: searchString });

    //    var grid = $('#invAdj');
    //    grid[0].p.search = f.rules.length > 0;
    //    $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
    //    grid.trigger("reloadGrid", [{ page: 1 }]);
    //}
    //    function SearchByDate()
    //{
    //    //  Fetch the text from our <input> control
    //    var searchString = $("#date").val();
        
    //    //  Prepare to pass a new search filter to our jqGrid
    //    var f = { groupOp: "AND", rules: [] };

    //    //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
    //    //  In this example, I'm searching through the UserName column.

    //    f.rules.push({ field: "date", op: "cn", data: searchString });

    //    var grid = $('#invTxSummary');
    //    grid[0].p.search = f.rules.length > 0;
    //    $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
    //    grid.trigger("reloadGrid", [{ page: 1 }]);
    //}

        //         function getInvTxType() {
        //var ReasonsList= {};
        //$.ajaxSetup( { "async": false } );
        //$.getJSON('InvTxSummary/CreateInvTxTypeList', function(data) {
        //if (data != null) {
        //    for (var i = 0; i < data.length; i++) {
        //     ReasonsList[data[i].value]=data[i].text;
                 
        //      }
        //    }//if

        //    });
        //    $.ajaxSetup( { "async": true } );

        //   return ReasonsList; 

        //}

</script>
}
