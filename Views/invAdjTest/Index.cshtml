@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "invAdjTest";
}

<div class="text-center">
    <h4 class="display-5">Inventory Adjustment</h4>
</div>
<body>
    <div class="container">
        <div class="Date">
          <label for="date" >Trans Date:</label>
          <input type="date"id='date' name="date" />
        </div>
        <div class="Notes"> 
          <label for="comments" >Notes:</label>
          <input type="text" id="comments" name="comments"/>
        </div>
    </div>
</body>

<fieldset class="scheduler-border">
 <div class="mb-3 row">
        <div class="col-lg-1 text-right"> 
          <label for="comments"  class="col-form-label" style="font-size:12px;">Notes:</label>
        </div>
        <div class="col-lg-5 p-0">
          <input type="text"  style="font-size:12px;" class="form-control" id="comments" name="comments"/>
        </div>
        <div class="col-lg-2"></div>
        <div class="col-lg-1 text-right"> 
          <label for="saCode"  class="col-form-label" style="font-size:12px;">SA Code:</label>
        </div>
        <div class="col-lg-1 pl-0">
          <input type="text" style="font-size:12px; border-radius: 0 !important" class="form-control" id="saCode" readonly/>
        </div>
   </div>
</fieldset>
<table id="invAdjTest"></table>
<div id="jqGridPager"></div>
<fieldset class="scheduler-border">
 <div class="mb-3 row">
    <div class="col-lg-12">
          <button class="btn btn-secondary btn-lg btn-block" style="font-size:12px;" id="newPage" type="button"> New Page </button>  
    </div>
 </div>
</fieldset>


@section scripts {

<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
     $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var name;
    $(document).ready(function() {
       $("#invAdjTest").jqGrid({
               url: 'InvAdjTest/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'InvAdjTest/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'InventoryTxTypeId',name: 'inventoryTxTypeId',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Sa Code',name: 'saCode',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Date',name: 'date',fixed:true,hidden:true, edittype:"text",editoptions: { readonly: 'readonly'}},
                   { label: 'Product Name',name: 'productName',fixed:true,editable: true,editrules: { required: true,custom:true, custom_func:IsProduct },                                                             
                    editoptions: {
                    dataInit: function(elem) {
                    curRowId = $('#invAdj').getGridParam('selrow');
                    $(elem).select();
                    $(elem).autocomplete({source: getProductName(),autoFocus: true,minLength: 0, select:function (event, ui) {
                    $('#invAdj').jqGrid('setCell',curRowId,'supplierName', getSupplierNames(ui.item.value));
                    $('input#supplierName').val(getSupplierNames(ui.item.value));
                    $('#invAdj').jqGrid('setCell',curRowId,'productSku', getProductSku(ui.item.value));
                    $('input#productSku').val(getProductSku(ui.item.value));
                    } });   
                                  }
                   }},
                   { label: 'Supplier',name: 'supplierName',fixed:true,width:120,editable:true, editoptions: {readonly: 'readonly'}},
                   { label: 'Product Sku',name: 'productSku',fixed:true,width:80,editable:true , editoptions: {readonly: 'readonly'}},
                   { label: 'Locations',name: 'inventoryLocationId',fixed:true,width:80, editable: true, edittype:"select",formatter:'select',editrules: { required: true }, editoptions:{value:getLocation()}},
                   { label: 'Adj Amount (+/-)',name: 'amount',fixed:true,width:80,align:"right",editable: true, edittype:"text",editrules: { required: true, number: true }},
                   { label: 'Reasons',name: 'inventoryTxReasonsId',fixed:true,width:110, editable: true, edittype:"select",editrules: { required: true },formatter:'select', editoptions:{value:getReasons()}},
                   { label: 'Notes',name: 'comments',fixed:true,width:450, editable: true, edittype:"text"}

                 ],  
               viewrecords: true,
               height: 388.5,
               rowHeight: 20,
               rowNum: 15,
               pager: "#jqGridPager",
               editurl: 'InvAdjTest/Update', 
               

           })
               



           $('#invAdjTest').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false,add:true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
              
               {
                  
               },
               {
              zIndex:99,
              afterShowForm: function () {
              var idSelector = $.jgrid.jqID(this.p.id);
              //if(header==false) {
              //$.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              //alert("Error: Need Header");
              //}
              },
               //onclickSubmit: function (){
               //},
               afterSubmit:function(){
                $.getJSON('InvAdjTest/DisplaySACode', function(data){
                $("#saCode").val(data);
                });
                $.ajaxSetup( { "async": true } );
               },
               beforeSubmit :function (){
               var currentDate = $("#date").val();
               var notes = $("#comments").val();
               $.getJSON('InvAdjTest/CreateHeader?data='+currentDate+'/'+notes, function(){});
               $.ajaxSetup( { "async": true } );
               },
               closeAfterAdd: true,
               recreateForm: true,
               errorTextFormat: function (data) {
                      return 'Error: ' + data.responseText
                   },
                   url: 'InvAdjTest/Add'
               });
               
       });
       $(document).ready(function () {  
           $('#date').val(date());
       });
       $(document).ready(function () {  
           $.ajax({  
               type: "GET",  
               url: "InvAdjTest/SaCode",  
               data: "{}",  
               success: function (data) {  
                   if(data!=null)
                   {
                      header= true;
                      $("#saCode").val(data.sacode);
                      $("#date").val(data.date);
                      $("#comments").val(data.comments);
                   }
               }  
           });  
       });
      
       $('#invAdjTest').setGridWidth(parseInt($(window).width()) - 20);

       $("#newPage").on('click', function () {
           window.location.replace("InvAdjTest");
       });

       function IsProduct(value,colname)
       {
           var containsProduct = false;
           $.ajaxSetup( { "async": false } );
           $.getJSON('InvAdjTest/CreateProductName', function(data) {
                if (data != null) 
                {
                    for (var i = 0; i < data.length; i++) 
                    {
                        if(value== data[i].text)
                        {
             
                            containsProduct = true;
               
                        }
                    }
                }//if

            });
            if(containsProduct==true)
            {
               $.ajaxSetup( { "async": true } );
               return [true,""];
            }
            else
            {
                $.ajaxSetup( { "async": true } );
                return [false,"Please Enter Valid Product"];
            }

       }


       function date()
       {
            var date;
            var currentDate = new Date();
            var day = ("0" + currentDate.getDate()).slice(-2);
            var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
            var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
            date = today.toString();
            return date;
       }
    

        function getSupplierNames(value) 
       {
            var Supplier="";
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdjTest/CreateList', function(data) 
            {
                if (data != null) 
                {
                    for (var i = 0; i < data.length; i++) 
                    {
                        if(value === data[i].value)
                        {
                            Supplier= data[i].text;
                        }
                    } 
                }//if

            });
            $.ajaxSetup( { "async": true } );
            return Supplier; 
       }

       function getProductSku(value) 
       {
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdjTest/CreateProductSkuList', function(data) 
            {
                if (data != null) 
                {
                    for (var i = 0; i < data.length; i++) 
                    {
                        if(data[i].value== value)
                        {
                            ProductSku=data[i].text;
                        }  
                    }
                }//if

            });
            $.ajaxSetup( { "async": true } );
            return ProductSku.toString(); 
       }

              function getProductName() 
       {
               var ProductNameList= [];
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdjTest/CreateProductName', function(data) 
            {
                if (data != null) 
                {
                    for (var i = 0; i < data.length; i++) 
                    {
                        ProductNameList[i]=data[i].text;
                    }
                }//if
            });
            $.ajaxSetup( { "async": true } );
            console.log(ProductNameList);
            return ProductNameList; 
       }

       function getLocation() 
       {
            var LocationList= {};
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdjTest/CreateLocationList', function(data) 
            {
                if (data != null) 
                {
                    for (var i = 0; i < data.length; i++) 
                    {
                        LocationList[data[i].value]=data[i].text;
                    }
                }//if

            });
            $.ajaxSetup( { "async": true } );
            return LocationList; 
       }

       function getReasons() 
       {
            var ReasonsList= {};
            $.ajaxSetup( { "async": false } );
            $.getJSON('InvAdjTest/CreateReasonsList', function(data) 
            {
                if (data != null)
                {
                    for (var i = 0; i < data.length; i++)
                    {
                        ReasonsList[data[i].value]=data[i].text;
                 
                    }
                }//if

            });
            $.ajaxSetup( { "async": true } );
            return ReasonsList; 
        }
</script>
}