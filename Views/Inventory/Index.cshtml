@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Inventory";
}

<div class="text-center">
    <h4 class="display-5">Inventory</h4>
</div>
<body>
    <div class="searchInput2"> 
      <label for="description" class="Label" >Product Name:</label>
      <input type="text" class="input2" id="description" name="description"/>
  </div>
</body>


<table id="inventory"></table>
<div id="jqGridPager"></div>
@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;

    $(document).ready(function() {
       $("#inventory").jqGrid({
               url: 'Inventory/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   //{
                   //     label: "Edit Actions",
                   //     name: "actions",
                   //     width: 100,
                   //     fixed:true,
                   //     formatter: "actions",
                   //     formatoptions: {
                   //         keys: true,
                   //         editOptions: { },
                   //         addOptions: { },
                   //         delOptions: { url: 'Inventory/Delete' }
                   //     }
                   // },
                    {
                        label: 'Product Name', name: 'productName', fixed: true, width: 150, editable: true, editrules: { required: true, custom: true, custom_func: IsProduct },
                        editoptions: {
                            dataInit: function (elem) {
                                curRowId = $('#inventory').getGridParam('selrow');
                                $(elem).select();
                                $(elem).autocomplete({
                                    source: getProductName(), autoFocus: true, minLength: 0, select: function (event, ui) {
                                        $('#inventory').jqGrid('setCell', curRowId, 'supplierName', getSupplierNames(ui.item.value));
                                        $('input#supplierName').val(getSupplierNames(ui.item.value));
                                        $('#inventory').jqGrid('setCell', curRowId, 'productSku', getProductSku(ui.item.value));
                                        $('input#productSku').val(getProductSku(ui.item.value));
                                    }
                                });
                            }
                        }
                    },

                   { label: 'Product Id',name: 'productSku',fixed:true,width:100, editable: true, edittype:"text", editoptions: { maxlength: 50}, editrules: { required: true }},

                   { label: 'Supplier',name: 'supplier',fixed:true,width:125, editable: true, edittype:"select",formatter: 'select', editoptions: {value: getSupplierNames()}},

                   { label: 'Location', name: 'invLocationName',fixed:true,width:125, editable: true, edittype:"text",editoptions: {maxlength: 15}, editrules: { required: true } },

                   { label: 'Inventory Qty',name: 'invCount',fixed:true,width:100, editable: true, edittype:"text", editoptions: { maxlength:15},editrules: { required: true }},

                   { label: 'Date', name: 'date',fixed:true,width:100, editable: true, edittype:"text",editoptions: {maxlength: 100},editrules: { required: true } }
                 ], 
               viewrecords: true,
               height: 388.5,
               rowHeight: 20,
               rowNum: 15,
               pager: "#jqGridPager",
               editurl: 'Inventory/Update'
               //onSelectRow: editRow, // the javascript function to call on row click. will use to put the row in edit mode

           }).hideCol("productId");




            $('#inventory').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: false, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {},
               //{
               //    closeAfterAdd: true,
               //    recreateForm: true,
               //    errorTextFormat: function (data) {
               //        return 'Error: ' + data.responseText
               //    },
               //    url: "Products/Add"
               //}
               );

       });

        $('#inventory').setGridWidth(parseInt($(window).width()) - 20);

       $("#description").on('change keyup paste', function () {
           SearchByProductName();
       });

    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#description").val();

        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "name", op: "cn", data: searchString });

            var grid = $('#inventory');
        grid[0].p.search = f.rules.length > 0;
        
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
    

        function IsProduct(value, colname) {
            var containsProduct = false;
            $.ajaxSetup({ "async": false });
            $.getJSON('Inventory/CreateProductName', function (data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) {
                        if (value == data[i].text) {

                            containsProduct = true;

                        }
                    }
                }//if

            });
            if (containsProduct == true) {
                $.ajaxSetup({ "async": true });
                return [true, ""];
            }
            else {
                $.ajaxSetup({ "async": true });
                return [false, "Please Enter Valid Product"];
            }

        }
        
        function getSupplierNames(value) {
            var Supplier = "";
            $.ajaxSetup({ "async": false });
            $.getJSON('Inventory/CreateList', function (data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) {
                        if (value === data[i].value) {
                            Supplier = data[i].text;
                        }
                    }
                }//if

            });
            $.ajaxSetup({ "async": true });
            return Supplier;
        }

        function getProductSku(value) {
            $.ajaxSetup({ "async": false });
            $.getJSON('Inventory/CreateProductSkuList', function (data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].value == value) {
                            ProductSku = data[i].text;
                        }
                    }
                }//if

            });
            $.ajaxSetup({ "async": true });
            return ProductSku.toString();
        }

        function getProductName() {
            var ProductNameList = [];
            $.ajaxSetup({ "async": false });
            $.getJSON('Inventory/CreateProductName', function (data) {
                if (data != null) {
                    for (var i = 0; i < data.length; i++) {
                        ProductNameList[i] = data[i].text;
                    }
                }//if
            });
            $.ajaxSetup({ "async": true });
            console.log(ProductNameList);
            return ProductNameList;
        }


        
</script>
}