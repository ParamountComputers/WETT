
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "saStockReceived";
}

<div class="text-center">
    <h1 class="display-4">Stock Received</h1>
</div>
<fieldset class="scheduler-border"  style="max-height: 18rem;">
 <div class="container-flow">
 <div class="row">
  <div class="col-sm-3">
        <label style="font-size:10px;" for="date">Transaction Date:</label>
        <input style="font-size:10px;" type="date" id="date" name="date">
  </div>
  <div class="col-sm-3">
            <form class="form-inline">
            <div class="form-group">
        <label style="font-size:10px;" for="truckingCompanyDropdown"class="d-inline">Trucking company:</label>  
        <select style="font-size:10px;" class="form-control" id="truckingCompanyDropdown" name="truckingCompanyDropdown"></select>
               </div>
            </form>
  </div>
                    <div class="col-sm-1"></div>
  <div class="col-sm-3">
            <form class="form-inline">
            <div class="form-group">
        <label style="font-size:10px;" for="locationsDropdown" class="d-inline">Locations:</label>  
        <select style="font-size:10px;" class="form-control" id="locationsDropdown" name="locationsDropdown"></select> 
            </div>
            </form>
    </div>
</div>
<div class="row">
  <div class="col-sm-3">
        <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="Supplier:" aria-label="Supplier:" aria-describedby="basic-addon2" id="Supplier:"/>
            </div>
          <div class="col-sm-3">
        <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="PO:" aria-label="PO:" aria-describedby="basic-addon2" id="purchaseOrder"/>
            </div>
            <div class="col-sm-1"></div>
  <div class="col-sm-2">
      <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="Seal No:" aria-label="Seal No:" aria-describedby="basic-addon2" id="sealNo"/>
         </div>
         </div>
<div class="row">
  <div class="col-sm-3">
         <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="Trucker/Probill Number:" aria-label="Trucker/Probill Number:" aria-describedby="basic-addon2" id="truckerProbillNumber"/>
             </div>
  <div class="col-sm-3">
         <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="Notes:" aria-label="Notes:" aria-describedby="basic-addon2" id="comments"/>
             </div>
             <div class="col-sm-1"></div>
  <div class="col-sm-2">
         <input style="font-size:10px; border-radius: 0 !important" type="text" class="form-control" placeholder="SA Code:" aria-label="SA Code:" aria-describedby="basic-addon2" id="saCode" readonly/>
        </div>
        <div class="col-sm-2"></div>
           <div class="col-sm-1 text-right">
          <button class="btn btn-outline-secondary" style="font-size:10px;" id="save" type="button">Save</button>  
            </div> 
    </div>
</div>
</fieldset>

<table id="saStockReceived" style="align: center"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;
    var header = false;
    var curRowId = -1;
    var name="";
    $(document).ready(function() {
       $("#saStockReceived").jqGrid({
               url: 'SaStockReceived/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'SaStockReceived/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'Seal No',name: 'sealNo',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Sa Code',name: 'saCode',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'trucker Probill Number',name: 'truckerProbillNumber',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'PO',name: 'purchaseOder',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Date',name: 'date', editable: true, edittype:"text", hidden:true,editoptions: { readonly: 'readonly'}},
                   { label: 'Product Name',name: 'productName',fixed:true,editable: true,editrules: { required: true,custom:true, custom_func:IsProduct },                                                             
                    editoptions: { 
                                  dataInit: function(elem) {

                    curRowId = $('#saStockReceived').getGridParam('selrow');   
                   
                    //$(elem).val();
                  // $('#invAdj').jqGrid('setSelection', 'productName');
                  $(elem).select();
                    $(elem).autocomplete({source: getProductName(),autoFocus: true,minLength: 0, select:function (event, ui) {
                  $('#saStockReceived').jqGrid('setCell',curRowId,'supplierName', getSupplierNames(ui.item.value));
                  $('input#supplierName').val(getSupplierNames(ui.item.value));
                  $('#saStockReceived').jqGrid('setCell',curRowId,'productSku',getProductSku(ui.item.value));
                  $('input#productSku').val(getProductSku(ui.item.value));   
                  console.log(getProductSku(ui.item.value));
                  console.log(ui.item.value);
                } });   
                                  }
                   }},
                   { label: 'Supplier',name: 'supplierName',fixed:true,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                   { label: 'Product Sku',name: 'productSku',fixed:true,width:80,editable: true, edittype:"text", editoptions: {readonly: 'readonly'}},
                   { label: 'Updated Stock',name: 'amount',editable: true, edittype:"text"},
                   { label: 'Locations',name: 'inventoryLocationId', editable: true, edittype:"select",formatter:'select', editoptions:{value:getLocations()}},
                   { label: 'Notes',name: 'comments', editable: true, edittype:"text"}

                 ], 
               viewrecords: true,
               height: 500,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'SaStockReceived/Update',
               onSelectRow: function(rowid) {
                curRowId=rowid;


               }

           })
               



           $('#saStockReceived').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {
                  
               },
              {
              zIndex:99,
              afterShowForm: function () {
              var idSelector = $.jgrid.jqID(this.p.id);
              if(header==false) {
              $.jgrid.hideModal("#editmod" + idSelector, {gbox: "#gbox_" + idSelector});
              alert("Error: Need Header");
              }
              },
              closeAfterAdd: true,
              recreateForm: true,
              errorTextFormat: function (data) {
              return 'Error: ' + data.responseText
              },
              url: "SaStockReceived/Add"
               });

       });
$(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateLocationsList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Select a Location</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#locationsDropdown").html(s);  
           }  
       });  
   });
   $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateTruckingList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Select a Trcuking company</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#truckingCompanyDropdown").html(s);
               
           }  
       });  
   });
          $(document).ready(function () {  
           $('#date').val(date());
       });
       $('#saStockReceived').setGridWidth(parseInt($(window).width()) - 20);
       $("#productName").on('change keyup paste', function () {
           SearchByProductName();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
           
       }); 
              $("#comments").on('change keyup paste', function () {
           SearchByComments();
           
       }); 
            $("#saCode").on('change keyup paste', function () {
           SearchBySaCode();
        });
               $("#locationsDropdown").on('change keyup paste', function () {
           SearchByLocations();
           
       }); 

                   $("#purchaseOrder").on('change keyup paste', function () {
           SearchByPurchaseOrder()
        });
               $("#save").on('click', function () {
           SaveHeader();
        });
        function date()
        {
         var date;
         var currentDate = new Date();
         var day = ("0" + currentDate.getDate()).slice(-2);
         var month = ("0" + (currentDate.getMonth() + 1)).slice(-2);
         var today = currentDate.getFullYear() + "-" + (month) + "-" + (day);
         date = today.toString();
         return date;
        }
    
            function SaveHeader()
    {

        var date = $("#date").val();
        var notes = $("#comments").val();
        var truckingCompany= $("#truckingCompanyDropdown").val();
        var Po = $("#purchaseOrder").val();
        var sealNumber = $("#sealNo").val();
        var truckingNumber = $("#truckerProbillNumber").val();
        var locations = $("#locationsDropdown").val();
              if(locations!=-1 && truckingCompany!=-1)
            {
                header = true;
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateHeader?data='+date+'/'+notes+'/'+truckingCompany+'/'+Po+'/'+sealNumber+'/'+truckingNumber+'/'+locations, function(data) {
 
        $("#saCode").val(data);
                    });
            $.ajaxSetup( { "async": true } );
            }
            else if(truckingCompany==-1 && locations==-1)
            {
                alert("Error: Enter A trucking Company and Location");
            }
            else if(truckingCompany==-1)
            {
                alert("Error: Enter A Trucking Company");
            }
            else if(locations==-1)
            {
                 alert("Error: Enter A Location");
            }
            $('#saStockReceived').setGridParam({ page: 1 }).trigger("reloadGrid");
      }
                      function IsProduct(value,colname)
       {
           var containsProduct = false;
                   $.ajaxSetup( { "async": false } );
        $.getJSON('InvAdj/CreateProductName', function(data) {
        if (data != null) {


            for (var i = 0; i < data.length; i++) 
            {
                console.log(data[i].value);
         if(value== data[i].value)
         {
             
           containsProduct = true;
               
         }
            }
                         }//if

            });
            if(containsProduct==true)
            {
              $.ajaxSetup( { "async": true } );
              return [true,""];
            }
            else{
            $.ajaxSetup( { "async": true } );
            return [false,"Please Enter Valid Product"];
            }

      }
    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#productName").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "productName", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchBySaCode()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#saCode").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "saCode", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchByDate()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#date").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "date", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
            function SearchByComments()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#comments").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "comments", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }

        function SearchByLocations()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#locationsDropdown").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "locationsDropdown", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
    
     function SearchByPurchaseOrder()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#purchaseOrder").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "purchaseOrder", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
    //
    //End of search functions
    //

            function getSupplierNames(value) {
        var Supplier="";
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateList', function(data) {
        if (data != null) {
            
            for (var i = 0; i < data.length; i++) {
              if(data[i].value == value )
                {
                 Supplier=data[i].text;
                }
            } 
        }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(Supplier);
           return Supplier; 

        }

              function getProductSku(value) {
        var ProductSku= "";
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductSkuList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++)
            {
                if(data[i].value == value)
                {
                   ProductSku=data[i].text;
                } 
             }
        }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(ProductSku);
           return ProductSku; 

        }
                function getProductName() {
         var ProductNameList= [];
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductName', function(data) {
        if (data != null) {


            for (var i = 0; i < data.length; i++) 
            {
                ProductNameList[i]=data[i].value;
            }
         }//if

            });
            $.ajaxSetup( { "async": true } );
           return ProductNameList; 

        }
                 function getLocations() {
        var LocationList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateLocationsList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             LocationList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(LocationList);
           return LocationList; 

        }
        

</script>
}
