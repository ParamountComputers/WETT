@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "invAdj";
}

<div class="text-center">
    <h1 class="display-4">Inventory Adjustment</h1>
</div>
<fieldset class="scheduler-border">
    <legend class="scheduler-border">Search</legend>
    <div class="input-group mb-3">
        <label for="date">Transaction Date:</label>
        <input type="date" id="date" name="date">
        <input type="text" class="form-control" placeholder="ProductName" aria-label="ProductName" aria-describedby="basic-addon2" id="productName">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button">Search</button>
        </div>
        <input type="text" class="form-control" placeholder="SA Code:" aria-label="SA Code:" aria-describedby="basic-addon2" id="saCode">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button">Search</button>
        </div>
    </div>
</fieldset>

<table id="invAdj" style="align: center"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;

    $(document).ready(function() {
       $("#invAdj").jqGrid({
               url: 'invAdj/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        fixed:true,
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'Products/Delete' }
                        }
                    },
                   { label: 'Date',name: 'date',fixed:true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
 			       { label: 'Product Id',name: 'productId',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Supplier',name: 'supplierName',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Product Name',name: 'productName',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Locations',name: 'inventoryLocation',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Updated Stock',name: 'amount',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Reasons',name: 'inventoryTxReason',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true},
                   { label: 'Notes',name: 'comments',fixed:true, editable: true, edittype:"text", editoptions: { readonly: 'readonly'}, key: true}

                 ], 
               viewrecords: true,
               height: 250,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'Products/Update'
               //onSelectRow: editRow, // the javascript function to call on row click. will use to put the row in edit mode

           })
               



           $('#invAdj').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {},
               {
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "Products/Add"
               });

       });

       $('#invAdj').setGridWidth(parseInt($(window).width()) - 20);

       $("#productName").on('change keyup paste', function () {
           SearchByProductName();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
       });

    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#productName").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "productName", op: "cn", data: searchString });

        var grid = $('#invAdj');
        grid[0].p.search = f.rules.length > 0;
        console.log(grid[0].p.postData);
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchByDate()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#date").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "date", op: "cn", data: searchString });

        var grid = $('#invAdj');
        grid[0].p.search = f.rules.length > 0;
        console.log(grid[0].p.postData);
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        
</script>
}
