
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "saStockReceived";
}

<div class="text-center">
    <h1 class="display-4">Stock Received</h1>
</div>
<fieldset class="scheduler-border"  style="max-height: 18rem;">
    <legend class="scheduler-border">Search</legend>
 <form class="row row-cols-lg-auto g-3">
  <div class="col">
        <label for="date">Transaction Date:</label>
        <input type="date" id="date" name="date">
        </div>
          <div class="col">
        <input type="text" class="form-control" placeholder="Product Name:" aria-label="Product Name:" aria-describedby="basic-addon2" id="productName">
        </div>
  <div class="col">
        <input type="text" class="form-control" placeholder="SA Code:" aria-label="SA Code:" aria-describedby="basic-addon2" id="saCode">
        </div>
        </form>
         <br />
  <form class="row row-cols-lg-auto g-3">      
<div class="col"> 
        <label for="locationsDropdown">Locations:</label>  
        <select class="form-control" id="locationsDropdown" name="locationsDropdown"></select>  
         </div>
          <div class="col">
         <input type="text" class="form-control" placeholder="PO:" aria-label="PO:" aria-describedby="basic-addon2" id="purchaseOder">
         </div>
          <div class="col">
         <input type="text" class="form-control" placeholder="Trucker/Probill Number:" aria-label="Trucker/Probill Number:" aria-describedby="basic-addon2" id="truckerProbillNumber">
        </div>
        </form>
        <form class="row row-cols-lg-auto g-3">
<div class="col">
        <label for="truckingCompanyDropdown">Trucking company:</label>  
        <select class="form-control" id="truckingCompanyDropdown" name="ltruckingCompanyDropdown"></select>
         </div>
         <div class="col">
         <input type="text" class="form-control" placeholder="Notes:" aria-label="Notes:" aria-describedby="basic-addon2" id="comments">
        </div>
        <div class="col">
         <input type="text" class="form-control" placeholder="Seal No:" aria-label="Seal No:" aria-describedby="basic-addon2" id="sealNo">
        </div>
        </form>
</fieldset>

<table id="saStockReceived" style="align: center"></table>
<div id="jqGridPager"></div>

@section scripts {
<script type="text/javascript">

    $.jgrid.defaults.styleUI = 'Bootstrap';
    $.jgrid.defaults.responsive = true;
    var curRowId = -1;
    var name="";
    $(document).ready(function() {
       $("#saStockReceived").jqGrid({
               url: 'SaStockReceived/GetAll',
               mtype: "GET",
               guiStyle: "bootstrap",
               iconSet: "fontAwesome",
               idPrefix: "gb1_",
               datatype: "json",
               ajaxSelectOptions: {
                          type: "GET", 
                          contentType: 'application/json; charset=utf-8',
                          dataType: "json",
                          cache: false,
                      },
               autowidth:true,
               colModel: [
                   {
                        label: "Edit Actions",
                        name: "actions",
                        width: 100,
                        formatter: "actions",
                        formatoptions: {
                            keys: true,
                            editOptions: { },
                            addOptions: { },
                            delOptions: { url: 'SaStockReceived/Delete' }
                        }
                    },
                   { label: 'Inventory Tx Detail Id',name: 'inventoryTxDetailId', editable: true,hidden:true,editoptions: { readonly: 'readonly'},key: true},
                   { label: 'Seal No',name: 'sealNo',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Sa Code',name: 'saCode',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'trucker Probill Number',name: 'truckerProbillNumber',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'PO',name: 'purchaseOder',hidden:true, editable: true,editoptions: { readonly: 'readonly'}},
                   { label: 'Date',name: 'date', editable: true, edittype:"text", hidden:true},
                   { label: 'Supplier',name: 'supplierName', editable: true, edittype:"select",formatter:'select', editoptions: {value:getSupplierNames(),                
                   dataInit: function (elem) {
                    name = $(elem).val();
                    $('#saStockReceived').setColProp('productSku', { editoptions: { value:getProductSku()} });
                    $('#saStockReceived').setColProp('productName', { editoptions: { value:getProductName()} });
                   // console.log(name);
                    },
                       dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                       name =$('#invAdj').jqGrid ('getCell', curRowId, 'supplierName');
                      $('#saStockReceived').setColProp('productSku', { editoptions: { value:getProductSku()} });
                      $('#saStockReceived').setColProp('productName', { editoptions: { value:getProductName()} });
                       jQuery("saStockReceived").trigger('reloadGrid');
                       console.log(name);
                       
                        }
                    }
                       ]
                    }},
                   { label: 'Product Sku',name: 'productSku', editable: true,edittype:"select",formatter:'select',},
                   { label: 'Product Name',name: 'productId', editable: true, edittype:"select",formatter:'select', editoptions: { value:getProductName()} },
                   { label: 'Updated Stock',name: 'amount',editable: true, edittype:"text"},
                   { label: 'Locations',name: 'inventoryLocationId', editable: true, edittype:"select",formatter:'select', editoptions:{value:getLocations()}},
                   { label: 'Notes',name: 'comments', editable: true, edittype:"text"}

                 ], 
               viewrecords: true,
               height: 250,
               rowNum: 20,
               pager: "#jqGridPager",
               editurl: 'SaStockReceived/Update',
               onSelectRow: function(rowid) {
                curRowId=rowid;


               }

           })
               



           $('#saStockReceived').navGrid('#jqGridPager',
               // the buttons to appear on the toolbar of the grid
               { edit: false, add: true, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
               // options for the Add Dialog
               {
                  
               },
               {
                   closeAfterAdd: true,
                   recreateForm: true,
                   errorTextFormat: function (data) {
                       return 'Error: ' + data.responseText
                   },
                   url: "SaStockReceived/Add"
               });

       });
$(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateLocationsList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Please Select a Location</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#locationsDropdown").html(s);  
           }  
       });  
   });
   $(document).ready(function () {  
       $.ajax({  
           type: "GET",  
           url: "SaStockReceived/CreateLocationsList",  
           data: "{}",  
           success: function (data) {  
               var s = '<option value="-1">Please Select a Trcuking company</option>';  
               for (var i = 0; i < data.length; i++) {  
                   s += '<option value="' + data[i].value + '">' + data[i].text + '</option>';  
               }  
               $("#truckingCompanyDropdown").html(s);  
           }  
       });  
   });
       $('#saStockReceived').setGridWidth(parseInt($(window).width()) - 20);
       $("#productName").on('change keyup paste', function () {
           SearchByProductName();
       });
       $("#date").on('change keyup paste', function () {
           SearchByDate();
           
       }); 
              $("#comments").on('change keyup paste', function () {
           SearchByComments();
           
       }); 
            $("#saCode").on('change keyup paste', function () {
           SearchBySaCode();
        });
    function SearchByProductName()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#productName").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "productName", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchBySaCode()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#saCode").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "saCode", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
        function SearchByDate()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#date").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "date", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }
            function SearchByComments()
    {
        //  Fetch the text from our <input> control
        var searchString = $("#comments").val();
        
        //  Prepare to pass a new search filter to our jqGrid
        var f = { groupOp: "AND", rules: [] };

        //  Remember to change the following line to reflect the jqGrid column you want to search for your string in
        //  In this example, I'm searching through the UserName column.

        f.rules.push({ field: "comments", op: "cn", data: searchString });

        var grid = $('#saStockReceived');
        grid[0].p.search = f.rules.length > 0;
        $.extend(grid[0].p.postData, { filters: JSON.stringify(f) });
        grid.trigger("reloadGrid", [{ page: 1 }]);
    }

            function getSupplierNames() {
        var SupplierList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateList', function(data) {
        if (data != null) {
            
            for (var i = 0; i < data.length; i++) {
             SupplierList[data[i].text]=data[i].text;
              } 
            }//if

            });
            $.ajaxSetup( { "async": true } );
           return SupplierList; 

        }

              function getProductSku() {
        var ProductSkuList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductSkuList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
                if(data[i].value == name)
                {
             ProductSkuList[data[i].text]=data[i].text;
                } 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
           return ProductSkuList; 

        }
                function getProductName() {
        var ProductNameList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateProductName', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
                 ProductNameList[data[i].id]=data[i].text;
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(ProductNameList);
           return ProductNameList; 

        }
                 function getLocations() {
        var LocationList= {};
        $.ajaxSetup( { "async": false } );
        $.getJSON('SaStockReceived/CreateLocationsList', function(data) {
        if (data != null) {
            for (var i = 0; i < data.length; i++) {
             LocationList[data[i].value]=data[i].text;
                 
              }
            }//if

            });
            $.ajaxSetup( { "async": true } );
            console.log(LocationList);
           return LocationList; 

        }

</script>
}
